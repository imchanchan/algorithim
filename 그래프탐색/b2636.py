N, M = map(int, input().split(" "))

graph = []
outside = []
for i in range(N):
    graph.append(list(input().split(' ')))
    outside.append([0 for _ in range(M)])
print(graph)
print(outside)


for n in range(N):
    for m in range(M):
        if graph[n][m]=='1':
            break
        outside[n][m] = 1

    for m in range(M-1, -1, -1):
        if graph[n][m] == '1':
            break
        outside[n][m] = 2
    
for m in range(M):
    for n in range(N):
        if graph[n][m] == '1':
            break
        outside[n][m] = 3
    
    for n in range(N-1, -1, -1):
        if graph[n][m] == '1':
            break
        outside[n][m] = 4

# [확인]
for o in outside:
    print(o)

dx = [0,0,-1,1]
dy = [-1,1,0,0]

for n in range(N):
    for m in range(M):
        if graph[n][m] == '1' :
            for k in range(4):
                nn = n+dx[k]
                nm = m + dy[k]

                if outside[nn][nm]>0 and nn>=0 and nn<N and nm>=0 and nm<M :

                    graph[n][m] = '0'
                    break


for g in graph:
    print(g)



'''
[문제1]
- 1관점으로 생각해서, 밖에 있는 1일떄를 0과 만나면으로 할까했지만, 안쪽에 있는 0과 밖에 있는 0을 구분하기 어렵다. 

[해결1]
- outside 그래프를 도입해서, 밖에 있는 0만 표시를 하자. 
- graph값이 1일때와, outside값이 인접했을때 graph 1값을 0으로 만들자. 

[문제2]
- outside를 어떻게 만들까? 

[해결2]
- 한행씩 훑으면서!! 
- 좌>>우 방향으로, graph값이 0일때 쭉 1로 표시하다가, graph값이 1일때 break하자. 
- 우>>좌좌 방향으로, graph값이 0일때 쭉 1로 표시하다가, graph값이 1일때 break하자. 

[문제3]
- 예시) graph가 '0001110011100' 일때, 
- 좌>>우 방향 : outside = '111 00000000 00'
- 우>>좌 방향 : outside = '111 00000000 11'
이렇게 된다. outside정답은  111 000 11 000 11 이렇게 되어야한다. 

[해결3]
- 즉, 위에서 아래 방향으로, 아래에서 위 방향으로 훑어야한다.
- 사고를 빛처럼 해보자ㅋㅋ. 좌, 우, 위, 아래에서 비출때 각각 햇빛 받는 영역을 outside에서 1,2,3,4로 표시하자.

[성공]

>> outside
[4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4]
[4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4]
[4, 3, 3, 3, 3, 3, 3, 0, 0, 4, 4, 4]
[4, 0, 0, 0, 3, 3, 3, 0, 0, 4, 4, 4]
[4, 0, 0, 0, 0, 0, 0, 2, 2, 4, 4, 4]
[4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4]
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]

>> 한시간뒤 녹은 치즈 graph결과과
['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
['0', '0', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0']
['0', '0', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0']
['0', '0', '1', '1', '1', '0', '0', '1', '0', '0', '0', '0']
['0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '0']
['0', '0', '0', '1', '1', '1', '1', '1', '0', '0', '0', '0']
['0', '0', '0', '1', '1', '1', '1', '1', '0', '0', '0', '0']
['0', '0', '0', '1', '1', '1', '1', '1', '0', '0', '0', '0']
['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']



'''